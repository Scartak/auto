//ARDUINO OBSTACLE AVOIDING CAR//
// Before uploading the code you have to install the necessary library//
//AFMotor Library https://learn.adafruit.com/adafruit-motor-shield/library-install //
//NewPing Library https://github.com/livetronic/Arduino-NewPing// 
//Servo Library https://github.com/arduino-libraries/Servo.git //
// To Install the libraries go to sketch >> Include Library >> Add .ZIP File >> Select the Downloaded ZIP files From the Above links //
#include <AFMotor.h>  
#include <NewPing.h>
#include <Servo.h> 
//adding the libraries to help me code much more efficiently

#define TRIG_PIN A2 //sets the trig pin to A0
#define ECHO_PIN A5 // sets the echo pin to A1q
#define MAX_DISTANCE 500 //the maximum distance the ultrasonic sensor can see
#define MAX_SPEED 255 //speed of the DC motor
#define MAX_SPEED_OFFSET 20

NewPing sonar(TRIG_PIN, ECHO_PIN, MAX_DISTANCE); //initialise NewPing to use pin 0 for trigger output, pin 1 for echo input, with a maximum ping distance of 500cm.

AF_DCMotor motor1(1, MOTOR12_1KHZ); //giving name to the motors
AF_DCMotor motor4(4, MOTOR34_1KHZ); //giving name to the motors
Servo servo; //giving name to the Servo


int distance = 100;
int speedSet = 0; //sets the initial speed of the motor to 0

void setup() {
  servo.attach(9); //sets the value of servo pin to 9
  servo.write(90); //sets the angle to 90 degrees (makes it look straight)
  distance = getDistance();
  delay(100);
  distance = getDistance();
  delay(100);
  distance = getDistance();
  delay(100);
}

void loop() {
  int distR = 0;
  int distL = 0;
  delay(40);
  
  if(distance<=20)
  {
    stopMotor();
    delay(200);
    backward();
    delay(300);
    stopMotor();
    delay(200);
    distR = lookRight();
    delay(200);
    distL = lookLeft();
    delay(200);
    
  if(distR >= distL)
  {
   rightTurn();
   stopMotor();   
  }
  else
  { 
    leftTurn();
    stopMotor();
  }
  }
  else
  {
    forward();
  }
  distance = getDistance();
}


int lookLeft() {
  servo.write(20); //sets the angle of servo to 20 degrees(left)
  delay(400); 
  int distance = getDistance(); //gets the distance
  delay(100);
  servo.write(90); //sets it back to 90 degrees
  return distance;
  delay(100);
}

int lookRight() {
  servo.write(160); //sets the angle of servo to 160 degrees (right)
  delay(400); 
  int distance = getDistance(); //gets the distance
  delay(100);
  servo.write(90); //sets it back to 90 degrees
  return distance;
  delay(100);
}

int getDistance(){
  del int cm = sonar.ping_cm();
  return cm;
  delay(100);
}
 

void forward(){
  motor1.run(FORWARD); //motor goes forwards
  motor4.run(FORWARD);

    for(speedSet = 0; speedSet < MAX_SPEED; speedSet += 2)// slowly bring the speed up to avoid loading down the batteries too quickly
  {
    motor1.setSpeed(speedSet);
    motor4.setSpeed(speedSet);
  }
}

void backward(){
    motor1.run(BACKWARD); //motor goes backwards
    motor4.run(BACKWARD);  
  for (speedSet = 0; speedSet < MAX_SPEED; speedSet +=2) // slowly bring the speed up to avoid loading down the batteries too quickly
  {
    motor1.setSpeed(speedSet);
    motor4.setSpeed(speedSet);
  }
}

void stopMotor() {
  motor1.run(RELEASE); //stops the motor
  motor4.run(RELEASE);
  } 

  void leftTurn(){
  motor1.run(BACKWARD); 
  motor4.run(FORWARD); //turning one wheel forward while the other wheel turns backwards makes the vehicle turn
  motor1.setSpeed(255);
  motor4.setSpeed(225);
  delay(300);
  motor1.run(FORWARD);
  motor4.run(FORWARD);
}
  
void rightTurn(){
  motor1.run(FORWARD);
  motor4.run(BACKWARD);     
  motor1.setSpeed(255);
  motor4.setSpeed(225);  
  delay(300);
   motor1.run(FORWARD);
  motor4.run(FORWARD);
}